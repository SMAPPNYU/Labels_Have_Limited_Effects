'SMP4326',
'SMP4310',
'Trust_inst_w1',
'CBS_Trust_1',
'ABC_Trust_1',
'NBC_Trust_1',
'CNN_Trust_1',
'Fox_Trust_1')
top_attributes_html <- c('Gender',
'Education',
'Treatment',
'Age',
'Age-Squared',
"Party ID",
"Race/Ethnicity",
"Ideology ",
"Trust in Media",
"Trust of news in newspapers",
"Trust of news on social media ",
"News consumption (network news)",
"News consumption (cable news)",
"News consumption (print news) ",
"News consumption (public radio)",
"News consumption (talk radio)",
"News consumption (news on desktop)",
"News consumption (news on mobile)",
"Web Browser (Safari)",
'Pre-Treatment Value',
'Pre-Treatment Value',
'Pre-Treatment Value',
'Pre-Treatment Value',
'Pre-Treatment Value',
'Pre-Treatment Value',
'Pre-Treatment Value',
'Pre-Treatment Value',
'Pre-Treatment Value')
names(top_attributes_html) <- top_attribute_names
#Run For loop to produce Tables 37-50:
for(i in 1:length(list_variables_to_run_2)){
list_possible_covariates_for_use <- c('Treated',list_variables_to_run_2[[i]])
data_for_analysis <- data_frame_1 %>% ungroup() %>% select(`list_possible_covariates_for_use`)
#Clean Data:
data_for_analysis <- Clean(data_for_analysis)
f <- paste0(list_variables_to_run_2[[i]][1], " ~ .")
ITT_Model <- lm_robust(as.formula(f), data = data_for_analysis)
summary(ITT_Model)
names_of_columns_2 <- c('Treated',list_possible_covariates_for_use,'compliance_check_1')
names_use <- names(data_frame_1)[(names(data_frame_1) %in% names_of_columns_2)]
data_for_analysis <- data_frame_1[, names_use]
#Clean Data:
data_for_analysis <- Clean(data_for_analysis)
f <- paste0(list_variables_to_run_2[[i]][1], '~ . - Treated | . - compliance_check_1')
#CACE Model 1
CACE_Model_1 <- iv_robust(as.formula(f), data = data_for_analysis)
CACE_Model_1$term[which(CACE_Model_1$term == "compliance_check_11")] <- 'Treated'
# #CACE Model 2 - Passed first and second wave compliance check
names_of_columns_3 <- c('Treated',list_possible_covariates_for_use,'Complied')
names_use <- names(data_frame_1)[(names(data_frame_1) %in% names_of_columns_3)]
data_for_analysis <- data_frame_1[, names_use]
#Clean Data:
data_for_analysis <- Clean(data_for_analysis)
f <- paste0(list_variables_to_run_2[[i]][1], '~  . - Treated | . - Complied')
CACE_Model_2 <- iv_robust(as.formula(f), data = data_for_analysis)
CACE_Model_2$term[which(CACE_Model_2$term == "Complied")] <- 'Treated'
#names of the variables:
Variable_Names <- names(ITT_Model$coefficients)[-1]
Variable_Names <- str_replace_all(Variable_Names, top_attributes_html)
#Write Table
texreg(list(ITT_Model,CACE_Model_1,CACE_Model_2),
include.ci = FALSE,
digits=4,
omit.coef = '(Intercept)',
caption= Titles[i],
label = "table",
include.rmse = FALSE,
custom.coef.names = Variable_Names,
custom.model.names= c("Intent-To-Treat (ITT)", "CACE (Model 1)","CACE (Model 2)"),
file=Tables_title[i],
float.pos = "!htbp",
caption.above = TRUE)
}
###########################################   Effect of Moderators on Affective Polarization - Adjusted Covariate Models   ###############################################
list_possible_covariates <- c("gender_dummy_fem",
"educ_score",
"Age",
"Age_Sq",
"party_score",
"race_white",
"ideo_score",
"Trust_Media_w1",
"trust_news",
"trust_news_sm",
"cons_news_n",
"cons_cable",
"cons_print",
"cons_public",
"cons_talk",
"cons_desk",
"cons_mobile",
"Safari_dummy",
"IE_dummy",
"Chrome_dummy",
"Firefox_dummy",
"Social_Media_Use")
#Create Sets of variables to use in models:
list_variables_to_run_4 <- list(c('aff_pol_w2'))
#Create list of Titles:
Titles <- c('Testing Effect of Intervention Initial level of Affective Polarization Moderator on Effect on Affective Polarization (Covariate-Adjusted)')
#Create list of filenames:
Tables_title <-  c('./Tables/Table_51.txt')
#Create crosswalk for variables and display names:
top_attribute_names <- c("gender_dummy_fem",
"educ_score",
'Treated',
"Age",
"Age_Sq",
"party_score",
"race_white",
"ideo_score",
"Trust_Media_w1",
"trust_news",
"trust_news_sm",
"cons_news_n",
"cons_cable",
"cons_print",
"cons_public",
"cons_talk",
"cons_desk",
"cons_mobile",
"Safari_dummy",
'SMP4310',
'Treatment:Moderator',
"IE_dummy",
"Chrome_dummy",
"Firefox_dummy",
"Social_Media_Use")
top_attributes_html <- c('Gender',
'Education',
'Treatment',
'Age',
'Age-Squared',
"Party ID",
"Race/Ethnicity",
"Ideology ",
"Trust in Media",
"Trust of news in newspapers",
"Trust of news on social media ",
"News consumption (network news)",
"News consumption (cable news)",
"News consumption (print news) ",
"News consumption (public radio)",
"News consumption (talk radio)",
"News consumption (news on desktop)",
"News consumption (news on mobile)",
"Web Browser (Safari)",
'Pre-Treatment Value',
'Treatment*Moderator',
"Internet Explorer Browser",
"Chrome Browser",
"Firefox Browser",
"Social Media use")
names(top_attributes_html) <- top_attribute_names
i=1
#Run For loop to produce Tables 53-55:
for(i in 1:length(list_variables_to_run_4)){
list_possible_covariates_for_use <- c(list_variables_to_run_4[[i]],list_possible_covariates)
data_for_analysis <- data_frame_1 %>% ungroup() %>% select(`list_possible_covariates_for_use`)
#Clean Data:
data_for_analysis <- Clean(data_for_analysis)
#Use glmnet lasso to choose covariates to be a part of model:
names_of_columns <- Lasso(data_for_analysis)
#names_of_columns
#Reporting unadjusted (differences in means) and covariate-adjusted
#(OLS) estimates of treatment effects. We will use HC2 robust standard errors in all analyses and report
#$p$-values from two-tailed $t$-tests.
#Reporting unadjusted (differences in means) and covariate-adjusted
#(OLS) estimates of treatment effects. We will use HC2 robust standard errors in all analyses and report
#$p$-values from two-tailed $t$-tests.
names_of_columns <- c('Treated',names_of_columns)
#Affective Polarization
names_of_columns_M2 <- c('aff_pol_w1',names_of_columns)
names_use <- names(data_frame_1)[(names(data_frame_1) %in% names_of_columns_M2)]
data_for_analysis <- data_frame_1[, names_use]
#Clean Data:
data_for_analysis <- Clean(data_for_analysis)
colnames(data_for_analysis)[which(names(data_for_analysis) == "aff_pol_w1")] <- "Moderator"
f <- paste0(list_variables_to_run_4[[i]][1], " ~ Treated*Moderator + .")
lm_adj_MT_AP <- lm_robust(as.formula(f), data = data_for_analysis)
####MATCHING WITH VARIABLES####
#Match names_of_columns_3 with actual names
Variable_Names <- names(lm_adj_MT_AP$coefficients)[-1]
Variable_Names <- str_replace_all(Variable_Names, top_attributes_html)
#Write Table
texreg(list(lm_adj_MT_AP),
include.ci = FALSE,
digits=4,
omit.coef = '(Intercept)',
caption= Titles[i],
label = "table",
include.rmse = FALSE,
custom.coef.names = Variable_Names,
custom.model.names= c("Affective Polarization"),
file=Tables_title[i],
float.pos = "!htbp",
caption.above = TRUE)
}
###########################################   Effect of Moderators on Trust In Media - Adjusted Covariate Models   ###############################################
list_possible_covariates <- c("gender_dummy_fem",
"educ_score",
"Age",
"Age_Sq",
"party_score",
"race_white",
"ideo_score",
"Trust_Media_w1",
"trust_news",
"trust_news_sm",
"cons_news_n",
"cons_cable",
"cons_print",
"cons_public",
"cons_talk",
"cons_desk",
"cons_mobile",
"Safari_dummy",
"IE_dummy",
"Chrome_dummy",
"Firefox_dummy",
"Social_Media_Use")
#Create Sets of variables to use in models:
list_variables_to_run_4 <- list(c('Trust_Media_w2'))
#Create list of Titles:
Titles <- c('Testing Effect of Intervention Initial level of Trust In Media Moderator on Effect on Trust In Media (Covariate-Adjusted)')
#Create list of filenames:
Tables_title <-  c('./Tables/Table_52.txt')
#Create crosswalk for variables and display names:
top_attribute_names <- c("gender_dummy_fem",
"educ_score",
'Treated',
"Age",
"Age_Sq",
"party_score",
"race_white",
"ideo_score",
"Trust_Media_w1",
"trust_news",
"trust_news_sm",
"cons_news_n",
"cons_cable",
"cons_print",
"cons_public",
"cons_talk",
"cons_desk",
"cons_mobile",
"Safari_dummy",
'SMP4310',
'Treatment:Moderator',
"IE_dummy",
"Chrome_dummy",
"Firefox_dummy",
"Social_Media_Use")
top_attributes_html <- c('Gender',
'Education',
'Treatment',
'Age',
'Age-Squared',
"Party ID",
"Race/Ethnicity",
"Ideology ",
"Trust in Media",
"Trust of news in newspapers",
"Trust of news on social media ",
"News consumption (network news)",
"News consumption (cable news)",
"News consumption (print news) ",
"News consumption (public radio)",
"News consumption (talk radio)",
"News consumption (news on desktop)",
"News consumption (news on mobile)",
"Web Browser (Safari)",
'Pre-Treatment Value',
'Treatment*Moderator',
"Internet Explorer Browser",
"Chrome Browser",
"Firefox Browser",
"Social Media use")
names(top_attributes_html) <- top_attribute_names
i=1
#Run For loop to produce Tables 53-55:
for(i in 1:length(list_variables_to_run_4)){
list_possible_covariates_for_use <- c(list_variables_to_run_4[[i]],list_possible_covariates)
data_for_analysis <- data_frame_1 %>% ungroup() %>% select(`list_possible_covariates_for_use`)
#Clean Data:
data_for_analysis <- Clean(data_for_analysis)
#Use glmnet lasso to choose covariates to be a part of model:
names_of_columns <- Lasso(data_for_analysis)
#names_of_columns
#Reporting unadjusted (differences in means) and covariate-adjusted
#(OLS) estimates of treatment effects. We will use HC2 robust standard errors in all analyses and report
#$p$-values from two-tailed $t$-tests.
#Reporting unadjusted (differences in means) and covariate-adjusted
#(OLS) estimates of treatment effects. We will use HC2 robust standard errors in all analyses and report
#$p$-values from two-tailed $t$-tests.
names_of_columns <- c('Treated',names_of_columns)
#Affective Polarization
names_of_columns_M2 <- c('Trust_Media_w1',names_of_columns)
names_use <- names(data_frame_1)[(names(data_frame_1) %in% names_of_columns_M2)]
data_for_analysis <- data_frame_1[, names_use]
#Clean Data:
data_for_analysis <- Clean(data_for_analysis)
colnames(data_for_analysis)[which(names(data_for_analysis) == "Trust_Media_w1")] <- "Moderator"
f <- paste0(list_variables_to_run_4[[i]][1], " ~ Treated*Moderator + .")
lm_adj_MT_AP <- lm_robust(as.formula(f), data = data_for_analysis)
####MATCHING WITH VARIABLES####
#Match names_of_columns_3 with actual names
Variable_Names <- names(lm_adj_MT_AP$coefficients)[-1]
Variable_Names <- str_replace_all(Variable_Names, top_attributes_html)
#Write Table
texreg(list(lm_adj_MT_AP),
include.ci = FALSE,
digits=4,
omit.coef = '(Intercept)',
caption= Titles[i],
label = "table",
include.rmse = FALSE,
custom.coef.names = Variable_Names,
custom.model.names= c("Trust in Media"),
file=Tables_title[i],
float.pos = "!htbp",
caption.above = TRUE)
}
#Create Sets of variables to use in models:
#Create Sets of variables to use in models:
list_variables_to_run_4 <- list(c('aff_pol_w2'))
#Create list of Titles:
Titles <- c('Testing Effect of Intervention Initial level of Affective Polarization Moderator on Effect on Affective Polarization (Covariate-Adjusted)')
#Create list of filenames:
Tables_title <-  c('./Tables/Table_53.txt')
#Create crosswalk for variables and display names:
top_attribute_names <- c("gender_dummy_fem",
"educ_score",
'Treated',
"Age",
"Age_Sq",
"party_score",
"race_white",
"ideo_score",
"Trust_Media_w1",
"trust_news",
"trust_news_sm",
"cons_news_n",
"cons_cable",
"cons_print",
"cons_public",
"cons_talk",
"cons_desk",
"cons_mobile",
"Safari_dummy",
'SMP4310',
'Treatment:Moderator')
top_attributes_html <- c('Gender',
'Education',
'Treatment',
'Age',
'Age-Squared',
"Party ID",
"Race/Ethnicity",
"Ideology ",
"Trust in Media",
"Trust of news in newspapers",
"Trust of news on social media ",
"News consumption (network news)",
"News consumption (cable news)",
"News consumption (print news) ",
"News consumption (public radio)",
"News consumption (talk radio)",
"News consumption (news on desktop)",
"News consumption (news on mobile)",
"Web Browser (Safari)",
'Pre-Treatment Value',
'Treatment*Moderator')
names(top_attributes_html) <- top_attribute_names
i=1
#Run For loop to produce Tables 53-55:
for(i in 1:length(list_variables_to_run_4)){
names_of_columns <- c(list_variables_to_run_4[[i]])
#names_of_columns
#Reporting unadjusted (differences in means) and covariate-adjusted
#(OLS) estimates of treatment effects. We will use HC2 robust standard errors in all analyses and report
#$p$-values from two-tailed $t$-tests.
#Reporting unadjusted (differences in means) and covariate-adjusted
#(OLS) estimates of treatment effects. We will use HC2 robust standard errors in all analyses and report
#$p$-values from two-tailed $t$-tests.
names_of_columns <- c('Treated',names_of_columns)
#Affective Polarization
names_of_columns_M2 <- c('aff_pol_w1',names_of_columns)
names_use <- names(data_frame_1)[(names(data_frame_1) %in% names_of_columns_M2)]
data_for_analysis <- data_frame_1[, names_use]
#Clean Data:
data_for_analysis <- Clean(data_for_analysis)
colnames(data_for_analysis)[which(names(data_for_analysis) == "aff_pol_w1")] <- "Moderator"
f <- paste0(list_variables_to_run_4[[i]][1], " ~ Treated*Moderator + .")
lm_adj_MT_AP <- lm_robust(as.formula(f), data = data_for_analysis)
####MATCHING WITH VARIABLES####
#Match names_of_columns_3 with actual names
Variable_Names <- names(lm_adj_MT_AP$coefficients)[-1]
Variable_Names <- str_replace_all(Variable_Names, top_attributes_html)
#Write Table
texreg(list(lm_adj_MT_AP),
include.ci = FALSE,
digits=4,
omit.coef = '(Intercept)',
caption= Titles[i],
label = "table",
include.rmse = FALSE,
custom.coef.names = Variable_Names,
custom.model.names= c("Affective Polarization"),
file=Tables_title[i],
float.pos = "!htbp",
caption.above = TRUE)
}
###########################################   Effect of Moderators on Trust In Media - Unadjusted-Covariate Models   ###############################################
#Create Sets of variables to use in models:
#Create Sets of variables to use in models:
list_variables_to_run_4 <- list(c('Trust_Media_w2'))
#Create list of Titles:
Titles <- c('Testing Effect of Intervention Initial level of Trust In Media (Inverse) Moderator on Effect on Trust In Media (Covariate-Adjusted)')
#Create list of filenames:
Tables_title <-  c('./Tables/Table_54.txt')
#Create crosswalk for variables and display names:
top_attribute_names <- c("gender_dummy_fem",
"educ_score",
'Treated',
"Age",
"Age_Sq",
"party_score",
"race_white",
"ideo_score",
"Trust_Media_w1",
"trust_news",
"trust_news_sm",
"cons_news_n",
"cons_cable",
"cons_print",
"cons_public",
"cons_talk",
"cons_desk",
"cons_mobile",
"Safari_dummy",
'SMP4310',
'Treatment:Moderator')
top_attributes_html <- c('Gender',
'Education',
'Treatment',
'Age',
'Age-Squared',
"Party ID",
"Race/Ethnicity",
"Ideology ",
"Trust in Media",
"Trust of news in newspapers",
"Trust of news on social media ",
"News consumption (network news)",
"News consumption (cable news)",
"News consumption (print news) ",
"News consumption (public radio)",
"News consumption (talk radio)",
"News consumption (news on desktop)",
"News consumption (news on mobile)",
"Web Browser (Safari)",
'Pre-Treatment Value',
'Treatment*Moderator')
names(top_attributes_html) <- top_attribute_names
i=1
#Run For loop to produce Tables 53-55:
for(i in 1:length(list_variables_to_run_4)){
names_of_columns <- c(list_variables_to_run_4[[i]])
#names_of_columns
#Reporting unadjusted (differences in means) and covariate-adjusted
#(OLS) estimates of treatment effects. We will use HC2 robust standard errors in all analyses and report
#$p$-values from two-tailed $t$-tests.
#Reporting unadjusted (differences in means) and covariate-adjusted
#(OLS) estimates of treatment effects. We will use HC2 robust standard errors in all analyses and report
#$p$-values from two-tailed $t$-tests.
names_of_columns <- c('Treated',names_of_columns)
#Affective Polarization
names_of_columns_M2 <- c('Trust_Media_w1',names_of_columns)
names_use <- names(data_frame_1)[(names(data_frame_1) %in% names_of_columns_M2)]
data_for_analysis <- data_frame_1[, names_use]
#Clean Data:
data_for_analysis <- Clean(data_for_analysis)
colnames(data_for_analysis)[which(names(data_for_analysis) == "Trust_Media_w1")] <- "Moderator"
f <- paste0(list_variables_to_run_4[[i]][1], " ~ Treated*Moderator + .")
lm_adj_MT_AP <- lm_robust(as.formula(f), data = data_for_analysis)
####MATCHING WITH VARIABLES####
#Match names_of_columns_3 with actual names
Variable_Names <- names(lm_adj_MT_AP$coefficients)[-1]
Variable_Names <- str_replace_all(Variable_Names, top_attributes_html)
#Write Table
texreg(list(lm_adj_MT_AP),
include.ci = FALSE,
digits=4,
omit.coef = '(Intercept)',
caption= Titles[i],
label = "table",
include.rmse = FALSE,
custom.coef.names = Variable_Names,
custom.model.names= c("Trust in Media"),
file=Tables_title[i],
float.pos = "!htbp",
caption.above = TRUE)
}
