colnames(data_for_analysis)[which(names(data_for_analysis) == "Social_Media_Use")] <- "Moderator"
f <- paste0(list_variables_to_run_4[[i]][1], " ~ Treated*Moderator + .")
lm_adj_MT_SM_use <- lm_robust(as.formula(f), data = data_for_analysis)
#Moderator:  mean_cons
names_of_columns_M2 <- c('mean_cons',names_of_columns)
names_use <- names(data_frame_1)[(names(data_frame_1) %in% names_of_columns_M2)]
data_for_analysis <- data_frame_1[, names_use]
#Clean Data:
data_for_analysis <- Clean(data_for_analysis)
colnames(data_for_analysis)[which(names(data_for_analysis) == "mean_cons")] <- "Moderator"
f <- paste0(list_variables_to_run_4[[i]][1], " ~ Treated*Moderator + . - cons_desk - cons_mobile")
lm_adj_MT_consump <- lm_robust(as.formula(f), data = data_for_analysis)
#Pulse (absolute partisanship)
names_of_columns_M2 <- c('abs_part',names_of_columns)
names_use <- names(Pulse_data)[(names(Pulse_data) %in% names_of_columns_M2)]
data_for_analysis <- Pulse_data[, names_use]
#Clean Data:
data_for_analysis <- Clean(data_for_analysis)
colnames(data_for_analysis)[which(names(data_for_analysis) == "abs_part")] <- "Moderator"
f <- paste0(list_variables_to_run_4[[i]][1], " ~ Treated*Moderator + .")
lm_adj_MT_Part <- lm_robust(as.formula(f), data = data_for_analysis)
#Pulse (Pre-unreliable)
names_of_columns_M2 <- c('Prop_Unreliable_NewsG_Score',names_of_columns)
names_use <- names(Pulse_data)[(names(Pulse_data) %in% names_of_columns_M2)]
data_for_analysis <- Pulse_data[, names_use]
#Clean Data:
data_for_analysis <- Clean(data_for_analysis)
colnames(data_for_analysis)[which(names(data_for_analysis) == "Prop_Unreliable_NewsG_Score")] <- "Moderator"
f <- paste0(list_variables_to_run_4[[i]][1], " ~ Treated*Moderator + .")
lm_adj_MT_Prop_Unrel <- lm_robust(as.formula(f), data = data_for_analysis)
####MATCHING WITH VARIABLES####
#Match names_of_columns_3 with actual names
#Write Table
texreg(list(lm_adj_MT_DL,lm_adj_MT_S_Misinfo,lm_adj_MT_SM_use,lm_adj_MT_consump,lm_adj_MT_Part,lm_adj_MT_Prop_Unrel),
include.ci = FALSE,
digits=4,
omit.coef = '(Intercept)',
caption= Titles[i],
label = "table",
include.rmse = FALSE,
custom.coef.names = Variable_Names,
custom.model.names= c("Dig. Lit.", "Sci. Misinf.","S.M. Use","News Consump.","Partisan. of News Diet","Unreliable News Consumed"),
file=Tables_title[i],
float.pos = "!htbp",
caption.above = TRUE)
}
###########################################   Effect of Moderators on Behavioral Measures - Unadjusted Covariate Models   ###############################################
#Create crosswalk for variables and display names:
top_attribute_names <- c("gender_dummy_fem",
"educ_score",
'Treated',
"Age",
"Age_Sq",
"party_score",
"race_white",
"ideo_score",
"Trust_Media_w1",
"trust_news",
"trust_news_sm",
"cons_news_n",
"cons_cable",
"cons_print",
"cons_public",
"cons_talk",
"cons_desk",
"cons_mobile",
"Safari_dummy",
"log_news",
'Prop_Unreliable_NewsG_Score',
'Average_domain_NewsG_Score',
'Prop_Reliable_NewsG_Score',
'Count_Unreliable_NewsG_Score',
'Count_Reliable_NewsG_Score',
'Treatment:Moderator')
top_attributes_html <- c('Gender',
'Education',
'Treatment',
'Age',
'Age-Squared',
"Party ID",
"Race/Ethnicity",
"Ideology ",
"Trust in Media",
"Trust of news in newspapers",
"Trust of news on social media ",
"News consumption (network news)",
"News consumption (cable news)",
"News consumption (print news) ",
"News consumption (public radio)",
"News consumption (talk radio)",
"News consumption (news on desktop)",
"News consumption (news on mobile)",
"Web Browser (Safari)",
"Log of news viewed",
'Pre-Treatment Value',
'Pre-Treatment Value',
'Pre-Treatment Value',
'Pre-Treatment Value',
'Pre-Treatment Value',
'Treatment*Moderator')
names(top_attributes_html) <- top_attribute_names
#Create Sets of variables to use in models:
list_variables_to_run_3 = list(c('Prop_Unreliable_NewsG_Score_dv'),
c('Prop_Reliable_NewsG_Score_dv'),
c('Count_Unreliable_NewsG_Score_dv'),
c('Count_Reliable_NewsG_Score_dv'),
c('Average_domain_NewsG_Score_dv'),
c('Prop_Unreliable_NewsG_Score_post'),
c('Prop_Reliable_NewsG_Score_post'),
c('Count_Unreliable_NewsG_Score_post'),
c('Count_Reliable_NewsG_Score_post'),
c('Average_domain_NewsG_Score_post'))
#Create list of Titles:
Titles <- c('Testing the Effect of Moderators on the Intervention on Proportion of News Diet That is Unreliable with Covariate-Unadjusted Models (HC2 Robust standard errors) (Before July 1st)',
'Testing the Effect of Moderators on the Intervention on Proportion of News Diet That is Reliable with Covariate-Unadjusted Models (HC2 Robust standard errors) (Before July 1st)',
'Testing the Effect of Moderators on the Intervention on Count of Unreliable News Consumed with Covariate-Unadjusted Models (HC2 Robust standard errors) (Before July 1st)',
'Testing the Effect of Moderators on the Intervention on Count of Reliable News Consumed with Covariate-Unadjusted Models (HC2 Robust standard errors) (Before July 1st)',
'Testing the Effect of Moderators on the Intervention on Reliability Score of News Diet with Covariate-Unadjusted Models (HC2 Robust standard errors) (Before July 1st)',
'Testing the Effect of Moderators on the Intervention on Proportion of News Diet That is Unreliable with Covariate-Unadjusted Models (HC2 Robust standard errors) (After July 1st)',
'Testing the Effect of Moderators on the Intervention on Proportion of News Diet That is Reliable with Covariate-Unadjusted Models (HC2 Robust standard errors) (After July 1st)',
'Testing the Effect of Moderators on the Intervention on Count of Unreliable News Consumed with Covariate-Unadjusted Models (HC2 Robust standard errors) (After July 1st)',
'Testing the Effect of Moderators on the Intervention on Count of Reliable News Consumed with Covariate-Unadjusted Models (HC2 Robust standard errors) (After July 1st)',
'Testing the Effect of Moderators on the Intervention on Reliability Score of News Diet with Covariate-Unadjusted Models (HC2 Robust standard errors) (After July 1st)')
#Create list of filenames:
Tables_title <-  c('./Tables/Table_79.txt',
'./Tables/Table_80.txt',
'./Tables/Table_81.txt',
'./Tables/Table_82.txt',
'./Tables/Table_83.txt',
'./Tables/Table_84.txt',
'./Tables/Table_85.txt',
'./Tables/Table_86.txt',
'./Tables/Table_87.txt',
'./Tables/Table_88.txt')
#Run For loop to produce Tables 57-58:
for(i in 1:length(list_variables_to_run_3)){
#names_of_columns
names_of_columns <- c(list_variables_to_run_3[[i]])
#Reporting unadjusted (differences in means) and covariate-adjusted
#(OLS) estimates of treatment effects. We will use HC2 robust standard errors in all analyses and report
#$p$-values from two-tailed $t$-tests.
#Reporting unadjusted (differences in means) and covariate-adjusted
#(OLS) estimates of treatment effects. We will use HC2 robust standard errors in all analyses and report
#$p$-values from two-tailed $t$-tests.
names_of_columns <- c('Treated',names_of_columns)
#DL
names_of_columns_M1 <- c(names_of_columns,'Inverse_DL')
names_use <- names(Pulse_data)[(names(Pulse_data) %in% names_of_columns_M1)]
data_for_analysis <- Pulse_data[, names_use]
#Clean Data:
data_for_analysis <- Clean(data_for_analysis)
colnames(data_for_analysis)[which(names(data_for_analysis) == "Inverse_DL")] <- "Moderator"
f <- paste0(list_variables_to_run_3[[i]][1], " ~ Treated*Moderator + .")
lm_adj_MT_DL <- lm_robust(as.formula(f), data = data_for_analysis)
summary(lm_adj_MT_DL)
Variable_Names <- names(lm_adj_MT_DL$coefficients)[-1]
Variable_Names <- str_replace_all(Variable_Names, top_attributes_html)
#Scientific Misinformation
names_of_columns_M1 <- c(names_of_columns,'Total_Science_Misinfo')
names_use <- names(Pulse_data)[(names(Pulse_data) %in% names_of_columns_M1)]
data_for_analysis <- Pulse_data[, names_use]
#Clean Data:
data_for_analysis <- Clean(data_for_analysis)
colnames(data_for_analysis)[which(names(data_for_analysis) == "Total_Science_Misinfo")] <- "Moderator"
f <- paste0(list_variables_to_run_3[[i]][1], " ~ Treated*Moderator + .")
lm_adj_MT_S_Misinfo <- lm_robust(as.formula(f), data = data_for_analysis)
summary(lm_adj_MT_S_Misinfo)
#SM Use
names_of_columns_M1 <- c(names_of_columns,'Social_Media_Use')
names_use <- names(Pulse_data)[(names(Pulse_data) %in% names_of_columns_M1)]
data_for_analysis <- Pulse_data[, names_use]
#Clean Data:
data_for_analysis <- Clean(data_for_analysis)
colnames(data_for_analysis)[which(names(data_for_analysis) == "Social_Media_Use")] <- "Moderator"
f <- paste0(list_variables_to_run_3[[i]][1], " ~ Treated*Moderator + .")
lm_adj_MT_SM_use <- lm_robust(as.formula(f), data = data_for_analysis)
summary(lm_adj_MT_SM_use)
#Moderator:  mean_cons
names_of_columns_M2 <- c('mean_cons',names_of_columns)
names_use <- names(Pulse_data)[(names(Pulse_data) %in% names_of_columns_M2)]
data_for_analysis <- Pulse_data[, names_use]
#Clean Data:
data_for_analysis <- Clean(data_for_analysis)
colnames(data_for_analysis)[which(names(data_for_analysis) == "mean_cons")] <- "Moderator"
f <- paste0(list_variables_to_run_3[[i]][1], " ~ Treated*Moderator + . - cons_desk - cons_mobile")
lm_adj_MT_consump <- lm_robust(as.formula(f), data = data_for_analysis)
summary(lm_adj_MT_consump)
#Pulse (absolute partisanship)
names_of_columns_M2 <- c('abs_part',names_of_columns)
names_use <- names(Pulse_data)[(names(Pulse_data) %in% names_of_columns_M2)]
data_for_analysis <- Pulse_data[, names_use]
#Clean Data:
data_for_analysis <- Clean(data_for_analysis)
colnames(data_for_analysis)[which(names(data_for_analysis) == "abs_part")] <- "Moderator"
f <- paste0(list_variables_to_run_3[[i]][1], " ~ Treated*Moderator + .")
lm_adj_MT_Part <- lm_robust(as.formula(f), data = data_for_analysis)
summary(lm_adj_MT_Part)
#Pulse (Pre-unreliable)
names_of_columns_M2 <- c('Prop_Unreliable_NewsG_Score',names_of_columns)
names_use <- names(Pulse_data)[(names(Pulse_data) %in% names_of_columns_M2)]
data_for_analysis <- Pulse_data[, names_use]
#Clean Data:
data_for_analysis <- Clean(data_for_analysis)
colnames(data_for_analysis)[which(names(data_for_analysis) == "Prop_Unreliable_NewsG_Score")] <- "Moderator"
f <- paste0(list_variables_to_run_3[[i]][1], " ~ Treated*Moderator + .")
lm_adj_MT_Prop_Unrel <- lm_robust(as.formula(f), data = data_for_analysis)
summary(lm_adj_MT_Prop_Unrel)
#Write Table
texreg(list(lm_adj_MT_DL,lm_adj_MT_S_Misinfo,lm_adj_MT_SM_use,lm_adj_MT_consump,lm_adj_MT_Part,lm_adj_MT_Prop_Unrel),
include.ci = FALSE,
digits=4,
omit.coef = '(Intercept)',
caption= Titles[i],
label = "table",
include.rmse = FALSE,
custom.coef.names = Variable_Names,
custom.model.names= c("Dig. Lit.", "Sci. Misinf.","S.M. Use","News Consump.","Partisan. of News Diet","Unreliable News Consumed"),
file=Tables_title[i],
float.pos = "!htbp",
caption.above = TRUE)
}
###########################################   Effect of Moderators on Attitudinal Measures - Unadjusted Covariate Models   ###############################################
list_variables_to_run_4 = list(c('BLM_Misinfo_Index_w2'),
c('BLM_info_Index_w2'),
c('Covid_Misinfo_Index_w2'),
c('Covid_info_Index_w2'),
c('Trust_Media_w2'),
c('aff_pol_w2'),
c('SMP4326_w2'),
c('SMP4310_w2'),
c('Trust_inst_w2'),
c('CBS_Trust_2'),
c('ABC_Trust_2'),
c('NBC_Trust_2'),
c('CNN_Trust_2'),
c('Fox_Trust_2'))
#Create list of Titles:
Titles <- c('Testing Effect of Intervention Using Different Moderators on Belief in Misinformation about the Black Lives Matter Movement with Covariate-Unadjusted Models (HC2 Robust standard errors)',
'Testing Effect of Intervention Using Different Moderators on Belief in True Information about the Black Lives Matter Movement with Covariate-Unadjusted Models (HC2 Robust standard errors)',
'Testing Effect of Intervention Using Different Moderators on Belief in Misinformation about Covid-19 with Covariate-Unadjusted Models (HC2 Robust standard errors)',
'Testing Effect of Intervention Using Different Moderators on Belief in True Information about Covid-19 with Covariate-Unadjusted Models (HC2 Robust standard errors)',
'Testing Effect of Intervention Using Different Moderators on Trust in Media with Covariate-Unadjusted Models (HC2 Robust standard errors)',
'Testing Effect of Intervention Using Different Moderators on Affective Polarization with Covariate-Unadjusted Models (HC2 Robust standard errors)',
'Testing Effect of Intervention Using Different Moderators on Whether They Believe “Fake News is a Problem” with Covariate-Unadjusted Models (HC2 Robust standard errors)',
'Testing Effect of Intervention Using Different Moderators on Whether They Believe “Fake News is a Problem in the Mainstream Media” with Covariate-Unadjusted Models (HC2 Robust standard errors)',
'Testing Effect of Intervention Using Different Moderators on Trust in Institutions with Covariate-Unadjusted Models (HC2 Robust standard errors)',
'Testing Effect of Intervention Using Different Moderators on Trust in CBS with Covariate-Unadjusted Models (HC2 Robust standard errors)',
'Testing Effect of Intervention Using Different Moderators on Trust in ABC with Covariate-Unadjusted Models (HC2 Robust standard errors)',
'Testing Effect of Intervention Using Different Moderators on Trust in NBC with Covariate-Unadjusted Models (HC2 Robust standard errors)',
'Testing Effect of Intervention Using Different Moderators on Trust in CNN with Covariate-Unadjusted Models (HC2 Robust standard errors)',
'Testing Effect of Intervention Using Different Moderators on Trust in Fox News with Covariate-Unadjusted Models (HC2 Robust standard errors)')
#Create list of filenames:
Tables_title <-  c('./Tables/Table_89.txt',
'./Tables/Table_90.txt',
'./Tables/Table_91.txt',
'./Tables/Table_92.txt',
'./Tables/Table_93.txt',
'./Tables/Table_94.txt',
'./Tables/Table_95.txt',
'./Tables/Table_96.txt',
'./Tables/Table_97.txt',
'./Tables/Table_98.txt',
'./Tables/Table_99.txt',
'./Tables/Table_100.txt',
'./Tables/Table_101.txt',
'./Tables/Table_102.txt')
#Create crosswalk for variables and display names:
#Create crosswalk for variables and display names:
top_attribute_names <- c("gender_dummy_fem",
"educ_score",
'Treated',
"Age",
"Age_Sq",
"party_score",
"race_white",
"ideo_score",
"Trust_Media_w1",
"trust_news",
"trust_news_sm",
"cons_news_n",
"cons_cable",
"cons_print",
"cons_public",
"cons_talk",
"cons_desk",
"cons_mobile",
"Safari_dummy",
'SMP4310',
'Treatment:Moderator',
"IE_dummy",
"Chrome_dummy",
"Firefox_dummy",
"Social_Media_Use",
'aff_pol_w1',
'SMP4326',
'SMP4310',
'Trust_inst_w1',
'CBS_Trust_1',
'ABC_Trust_1',
'NBC_Trust_1',
'CNN_Trust_1',
'Fox_Trust_1')
top_attributes_html <- c('Gender',
'Education',
'Treatment',
'Age',
'Age-Squared',
"Party ID",
"Race/Ethnicity",
"Ideology ",
"Trust in Media",
"Trust of news in newspapers",
"Trust of news on social media ",
"News consumption (network news)",
"News consumption (cable news)",
"News consumption (print news) ",
"News consumption (public radio)",
"News consumption (talk radio)",
"News consumption (news on desktop)",
"News consumption (news on mobile)",
"Web Browser (Safari)",
'Pre-Treatment Value',
'Treatment*Moderator',
"Internet Explorer Browser",
"Chrome Browser",
"Firefox Browser",
"Social Media use",
'Pre-Treatment Value',
'Pre-Treatment Value',
'Pre-Treatment Value',
'Pre-Treatment Value',
'Pre-Treatment Value',
'Pre-Treatment Value',
'Pre-Treatment Value',
'Pre-Treatment Value',
'Pre-Treatment Value')
names(top_attributes_html) <- top_attribute_names
#Run For loop to produce Tables 59-62:
for(i in 1:length(list_variables_to_run_4)){
#names_of_columns
names_of_columns <- c(list_variables_to_run_4[[i]])
#Reporting unadjusted (differences in means) and covariate-adjusted
#(OLS) estimates of treatment effects. We will use HC2 robust standard errors in all analyses and report
#$p$-values from two-tailed $t$-tests.
#Reporting unadjusted (differences in means) and covariate-adjusted
#(OLS) estimates of treatment effects. We will use HC2 robust standard errors in all analyses and report
#$p$-values from two-tailed $t$-tests.
names_of_columns <- c('Treated',names_of_columns)
#DL
names_of_columns_M1 <- c(names_of_columns,'Inverse_DL')
names_use <- names(data_frame_1)[(names(data_frame_1) %in% names_of_columns_M1)]
data_for_analysis <- data_frame_1[, names_use]
#Clean Data:
data_for_analysis <- Clean(data_for_analysis)
colnames(data_for_analysis)[which(names(data_for_analysis) == "Inverse_DL")] <- "Moderator"
f <- paste0(list_variables_to_run_4[[i]][1], " ~ Treated*Moderator + .")
lm_adj_MT_DL <- lm_robust(as.formula(f), data = data_for_analysis)
Variable_Names <- names(lm_adj_MT_DL$coefficients)[-1]
Variable_Names <- str_replace_all(Variable_Names, top_attributes_html)
#Scientific Misinformation
names_of_columns_M1 <- c(names_of_columns,'Total_Science_Misinfo')
names_use <- names(data_frame_1)[(names(data_frame_1) %in% names_of_columns_M1)]
data_for_analysis <- data_frame_1[, names_use]
#Clean Data:
data_for_analysis <- Clean(data_for_analysis)
colnames(data_for_analysis)[which(names(data_for_analysis) == "Total_Science_Misinfo")] <- "Moderator"
f <- paste0(list_variables_to_run_4[[i]][1], " ~ Treated*Moderator + .")
lm_adj_MT_S_Misinfo <- lm_robust(as.formula(f), data = data_for_analysis)
#SM Use
names_of_columns_M1 <- c(names_of_columns,'Social_Media_Use')
names_use <- names(data_frame_1)[(names(data_frame_1) %in% names_of_columns_M1)]
data_for_analysis <- data_frame_1[, names_use]
#Clean Data:
data_for_analysis <- Clean(data_for_analysis)
colnames(data_for_analysis)[which(names(data_for_analysis) == "Social_Media_Use")] <- "Moderator"
f <- paste0(list_variables_to_run_4[[i]][1], " ~ Treated*Moderator + .")
lm_adj_MT_SM_use <- lm_robust(as.formula(f), data = data_for_analysis)
#Moderator:  mean_cons
names_of_columns_M2 <- c('mean_cons',names_of_columns)
names_use <- names(data_frame_1)[(names(data_frame_1) %in% names_of_columns_M2)]
data_for_analysis <- data_frame_1[, names_use]
#Clean Data:
data_for_analysis <- Clean(data_for_analysis)
colnames(data_for_analysis)[which(names(data_for_analysis) == "mean_cons")] <- "Moderator"
f <- paste0(list_variables_to_run_4[[i]][1], " ~ Treated*Moderator + . - cons_desk - cons_mobile")
lm_adj_MT_consump <- lm_robust(as.formula(f), data = data_for_analysis)
#Pulse (absolute partisanship)
names_of_columns_M2 <- c('abs_part',names_of_columns)
names_use <- names(Pulse_data)[(names(Pulse_data) %in% names_of_columns_M2)]
data_for_analysis <- Pulse_data[, names_use]
#Clean Data:
data_for_analysis <- Clean(data_for_analysis)
colnames(data_for_analysis)[which(names(data_for_analysis) == "abs_part")] <- "Moderator"
f <- paste0(list_variables_to_run_4[[i]][1], " ~ Treated*Moderator + .")
lm_adj_MT_Part <- lm_robust(as.formula(f), data = data_for_analysis)
#Pulse (Pre-unreliable)
names_of_columns_M2 <- c('Prop_Unreliable_NewsG_Score',names_of_columns)
names_use <- names(Pulse_data)[(names(Pulse_data) %in% names_of_columns_M2)]
data_for_analysis <- Pulse_data[, names_use]
#Clean Data:
data_for_analysis <- Clean(data_for_analysis)
colnames(data_for_analysis)[which(names(data_for_analysis) == "Prop_Unreliable_NewsG_Score")] <- "Moderator"
f <- paste0(list_variables_to_run_4[[i]][1], " ~ Treated*Moderator + .")
lm_adj_MT_Prop_Unrel <- lm_robust(as.formula(f), data = data_for_analysis)
#Write Table
texreg(list(lm_adj_MT_DL,lm_adj_MT_S_Misinfo,lm_adj_MT_SM_use,lm_adj_MT_consump,lm_adj_MT_Part,lm_adj_MT_Prop_Unrel),
include.ci = FALSE,
digits=4,
omit.coef = '(Intercept)',
caption= Titles[i],
label = "table",
include.rmse = FALSE,
custom.coef.names = Variable_Names,
custom.model.names= c("Dig. Lit.", "Sci. Misinf.","S.M. Use","News Consump.","Partisan. of News Diet","Unreliable News Consumed"),
file=Tables_title[i],
float.pos = "!htbp",
caption.above = TRUE)
}
#Figure 4: This figure presents the proportion of the average daily proportion of unreliable news viewed of the treatment and control groups across this study
#Read in Wave 1 Data
Wave_1_Data <- read.csv('./Data/NYUU0017_w1_OUTPUT.csv')
#Read in Wave 2 Data
Wave_2_Data <- read.csv('./Data/NYUU0017_w2_OUTPUT.csv')
#Change the columnnames that were the same in wave 1 and wave 2
colnames(Wave_2_Data)[89:114] <- c('operating_system_w2',
'web_browser_w2',
'device_w2',
'birthyr_w2',
'gender_w2',
'race_w2',
'educ_w2',
'marstat_w2',
'employ_w2',
'faminc_new_w2',
'pid3_w2',
'pid7_w2',
'presvote16post_w2',
'inputzip_w2',
'inputstate_w2',
'region_w2',
'votereg_w2',
'ideo5_w2',
'newsint_w2',
'religpew_w2',
'pew_churatd_w2',
'pew_bornagain_w2',
'pew_religimp_w2',
'pew_prayer_w2',
'startime_w2',
'endtime_w2')
colnames(Wave_2_Data)[1:2] <- c('caseid_w2',
'weight_w2')
colnames(Wave_2_Data)[5] <- c('visa1_w2')
#Merge based on caseid in Wave 1 survey and caseid_w1 in Wave 2 Survey
dataframe_1 <- merge(Wave_1_Data,Wave_2_Data,by.x='caseid',by.y='caseid_w1')
dataframe_1$plugin_treat <- as.character(dataframe_1$plugin_treat)
dataframe_1$Treated <- ifelse(dataframe_1$plugin_treat == 'Offered plug-in',1,0)
crosswalk_1 <- dataframe_1 %>% select(caseid,visa1)
dataframe_1 <- dataframe_1 %>% select(caseid,endtime,endtime_w2,Treated)
dataframe_1$endtime <- as.character(dataframe_1$endtime)
dataframe_1$endtime_w2 <- as.character(dataframe_1$endtime_w2)
dataframe_1$endtime <- substr(dataframe_1$endtime,1,10)
dataframe_1$endtime_w2 <- substr(dataframe_1$endtime_w2,1,10)
#Read in Wave 1 Data
Pulse_Data <- read.csv('./Data/pulsebyday.csv')
colnames(Pulse_Data)
Pulse_Data <- merge(Pulse_Data,dataframe_1,by='caseid')
Pulse_Data$endtime <- as.Date(Pulse_Data$endtime)
Pulse_Data$endtime_w2 <- as.Date(Pulse_Data$endtime_w2)
Pulse_Data$date <- as.Date(Pulse_Data$date)
Pulse_Data$Around_Treatment <- -1*(Pulse_Data$endtime-Pulse_Data$date)
Pulse_Data$After_Treatment <- (Pulse_Data$date-as.Date('2020-07-01'))
Pulse_Data$Day_of_Study <- (Pulse_Data$date-as.Date('2020-05-16'))
Pulse_Data$Around_Treatment <- as.numeric(Pulse_Data$Around_Treatment)
Pulse_Data$After_Treatment <- as.numeric(Pulse_Data$After_Treatment)
Pulse_Data$Dummy_Before <- ifelse(Pulse_Data$Around_Treatment < 1,'Pre-Treatment','Treatment')
Pulse_Data$Dummy_Before <- ifelse(Pulse_Data$After_Treatment > -1,'After Treatment',Pulse_Data$Dummy_Before)
Pulse_Data$date_2 <- as.Date(as.character(Pulse_Data$date),origin = '1970-01-01')
Analysis_D <- Pulse_Data %>% group_by(date_2,Treated) %>% mutate(AVG_Score = mean(Average_domain_NewsG_Score_day,na.rm=T))
Analysis_D <- Analysis_D %>% group_by(date_2,Treated) %>% mutate(AVG_Unrel_Prop = mean(Prop_Unreliable_NewsG_Score_day,na.rm=T))
Count_D <- Analysis_D %>% group_by(date_2,Treated,Dummy_Before) %>% count()
Analysis_D <- merge(Analysis_D,Count_D,by=c('date_2','Treated','Dummy_Before'))
Analysis_D <- Analysis_D %>% select(date_2,AVG_Score,AVG_Unrel_Prop,Treated,n)
Analysis_D <- unique(Analysis_D)
Analysis_D <- Analysis_D %>% filter(n > 99)
unique(Analysis_D$date_2)
Analysis_D$Group <- ifelse(Analysis_D$Treated == 1,'Treatment','Control')
#Figure 4: This figure presents the proportion of the average daily proportion of unreliable news viewed of the treatment and control groups across this study
ggplot(Analysis_D, aes(x=date_2,y=AVG_Unrel_Prop,colour=Group)) +
annotate("rect", xmin=as.Date('2020-06-02'), xmax=as.Date('2020-06-09'), ymin=-0.01, ymax=0.06,
alpha = .5,fill='gray46') +
stat_smooth(method='loess',se=T,span=0.5, method.args = list(degree = 1),aes(fill=Group)) +
scale_color_manual(values=c("blue","red"),
aesthetics = c("colour", "fill")) +
geom_vline(xintercept=as.Date('2020-06-02'), linetype="dashed",
color = "black", size=1, show.legend=T) +
geom_vline(xintercept=as.Date('2020-06-09'), linetype="dashed",
color = "black", size=1,) +
geom_vline(xintercept=as.Date('2020-07-01'), linetype="dashed",
color = "black", size=1, show.legend=T) +
ylab('Proportion of News Viewed that is Unreliable\n') +
coord_cartesian(xlim=c(as.Date('2020-06-03'),as.Date('2020-07-14')),ylim=c(0.03,0.045)) +
xlab('\n        First Wave                                    Treatment Ends                           ') +
theme_classic() +
theme(axis.title.x = element_text(size=16),
axis.text.x  = element_text(size=14),
axis.title.y = element_text(size=16),
axis.text.y  = element_text(size=14),
plot.title = element_text(size = 16),
legend.title = element_text(size=14),
legend.text = element_text(size=12))
ggsave('./Figures/fig_4.png',width=11)
