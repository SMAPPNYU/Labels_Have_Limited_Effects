


#Table 2: Descriptive statistics for sample by treatment and control groups by attrition:

#Read in Data:
Wave_1_Data <- read.csv('./Data/NYUU0017_w1_OUTPUT.csv')
Wave_2_Data <- read.csv('./Data/NYUU0017_w2_OUTPUT.csv')

#Change the columnnames that were the same in wave 1 and wave 2
colnames(Wave_2_Data)[89:114] <- c('operating_system_w2',
                                   'web_browser_w2',
                                   'device_w2',
                                   'birthyr_w2',
                                   'gender_w2',
                                   'race_w2',
                                   'educ_w2',
                                   'marstat_w2',
                                   'employ_w2',
                                   'faminc_new_w2',
                                   'pid3_w2',
                                   'pid7_w2',
                                   'presvote16post_w2',
                                   'inputzip_w2',
                                   'inputstate_w2',
                                   'region_w2',
                                   'votereg_w2',
                                   'ideo5_w2',
                                   'newsint_w2',
                                   'religpew_w2',
                                   'pew_churatd_w2',
                                   'pew_bornagain_w2',
                                   'pew_religimp_w2',
                                   'pew_prayer_w2',
                                   'startime_w2',
                                   'endtime_w2')

colnames(Wave_2_Data)[1:2] <- c('caseid_w2',
                                'weight_w2')  
colnames(Wave_2_Data)[5] <- c('visa1_w2')                           

#Merge based on caseid in Wave 1 survey and caseid_w1 in Wave 2 Survey
Waves <- merge(Wave_1_Data,Wave_2_Data,by.x='caseid',by.y='caseid_w1',all='T')

Attrition <- Waves %>% select(caseid,caseid_w2)
Attrition <- Attrition %>% mutate(Both_Waves = ifelse(is.na(caseid_w2),0,1)) %>% select(caseid,Both_Waves)
Attrition_Data <- merge(Wave_1_Data,Attrition,by='caseid')


# Create Treatment Variable
Attrition_Data$plugin_treat <- as.character(Attrition_Data$plugin_treat)
Attrition_Data$Treated <- ifelse(Attrition_Data$plugin_treat == 'Offered plug-in',1,0)


#Age
Attrition_Data <- Attrition_Data %>% mutate(Age = 2020 - birthyr)

#Education
Attrition_Data$educ <- factor(Attrition_Data$educ, levels = c('No HS',
                                                              'High school graduate',
                                                              'Some college',
                                                              '2-year',
                                                              '4-year',
                                                              'Post-grad'))
Attrition_Data$educ_score <- as.numeric(Attrition_Data$educ)

#Income
Attrition_Data$faminc_new  <- factor(Attrition_Data$faminc_new , levels = c("Less than $10,000",
                                                                            "$10,000 - $19,999",
                                                                            "$20,000 - $29,999",
                                                                            "$30,000 - $39,999",
                                                                            "$40,000 - $49,999",
                                                                            "$50,000 - $59,999",
                                                                            "$60,000 - $69,999",
                                                                            "$70,000 - $79,999",
                                                                            "$80,000 - $89,999",
                                                                            "$90,000 - $99,999",
                                                                            "$100,000 - $119,999",
                                                                            "$120,000 - $149,999",
                                                                            "$150,000 - $199,999",
                                                                            "$200,000 - $249,999",
                                                                            "$250,000 - $349,999",
                                                                            "$350,000 - $499,999",
                                                                            "$500,000 or more"))
Attrition_Data$income_score  <- as.numeric(Attrition_Data$faminc_new)

#Digital Literacy
##Create digital literacy variable:

#Run for loop to set the columns 18-23 as factors with the same levels
dl_matrix <- matrix(nrow=nrow(Attrition_Data))
for(i in 18:23){
  Attrition_Data[,i]  <- factor(Attrition_Data[,i], levels = c('No Understanding',
                                                               '2',
                                                               '3',
                                                               '4',
                                                               'Full Understanding'))
  
  dl_matrix <- cbind(dl_matrix,Attrition_Data[,i])
}
#Remove the first row in the dataset (Consists solely of NAs)
dl_matrix <- dl_matrix[,-1]

#Run for loop to set the columns 25-26 as factors with the same levels
for(i in c(25,26)){
  Attrition_Data[,i]  <- factor(Attrition_Data[,i], levels = c('Strongly Disagree',
                                                               '-3',
                                                               '-2',
                                                               '-1',
                                                               '0',
                                                               '1',
                                                               '2',
                                                               '3',
                                                               'Strongly Agree'))
  dl_matrix <- cbind(dl_matrix,Attrition_Data[,i])
}

#Run for loop to set the columns 24-27 as factors with the same levels
for(i in c(24,27)){
  Attrition_Data[,i]  <- factor(Attrition_Data[,i], levels = c('Strongly Agree',
                                                               '3',
                                                               '2',
                                                               '1',
                                                               '0',
                                                               '-1',
                                                               '-2',
                                                               '-3',
                                                               'Strongly Disagree'))
  dl_matrix <- cbind(dl_matrix,Attrition_Data[,i])
}

#We take the matrix with the all of the answers to our digital literacy question and convert the matrix into 
dl_matrix <- data.frame(dl_matrix)

#Rename the columns to correspond with each digital literacy question:
colnames(dl_matrix) <- c('DL_1','DL_2','DL_3','DL_4','DL_5','DL_6','DL_7','DL_8','DL_9','DL_10')

#Sum the values assigned from each digital literacy question:
dl_matrix <- dl_matrix %>% mutate(Total_DL = DL_1 + DL_2 + DL_3 + DL_4 + DL_5 + DL_6 + DL_7 + DL_8 + DL_9 + DL_10)
dl_matrix <- dl_matrix %>% select(Total_DL)


Attrition_Data <- cbind(Attrition_Data,dl_matrix)




#Gender
Attrition_Data$gender <- as.character(Attrition_Data$gender)
Attrition_Data <- Attrition_Data %>% mutate(gender_dummy_fem = ifelse(gender == 'Female',1,0))

#Race
Attrition_Data <- Attrition_Data %>% mutate(race_white = ifelse(race == 'White',1,0))

#Ideology
Attrition_Data$SMP8201 <- factor(Attrition_Data$SMP8201, levels = c('Very liberal',
                                                                    'Somewhat liberal',
                                                                    'Slightly liberal',
                                                                    'Moderate; middle of the road',
                                                                    'Slightly conservative',
                                                                    'Somewhat conservative',
                                                                    'Very conservative'))


Attrition_Data$ideo_score <- as.numeric(Attrition_Data$SMP8201) - 4


#Calculate statistics for treatment group by attrition
Attrition_Data <- Attrition_Data %>% mutate(Groups = ifelse(Treated == 1 & Both_Waves == 0,'Treated and did not take the Wave 2 survey','Treated and took both surveys'))
Attrition_Data <- Attrition_Data %>% mutate(Groups = ifelse(Treated == 0 & Both_Waves == 0,'Control and did not take the Wave 2 survey',Groups))
Attrition_Data <- Attrition_Data %>% mutate(Groups = ifelse(Treated == 0 & Both_Waves == 1,'Control and took both surveys',Groups))



########################################################################################################################################################

#Load Libraries:
library(tidyverse)
library(dplyr)
library(AER)
library(glmnet)
library(estimatr)
library(huxtable)
library(magrittr)
library(texreg)
library(ivpack)



#Read in compliance check data (compliance_check_1,compliance_check_2,Complied):
Compliance_Check <- read.csv('./Data/Compliance_Check_Data.csv')

#Only use compliance checks during the period in which the first wave survey was out
First_Check <- Compliance_Check %>% filter(timestamp < 1592500000000)
#Use the last compliance check for each respondent in this time frame:
First_Check <- First_Check %>% group_by(user_id) %>% top_n(1, timestamp)
#Set column names:
colnames(First_Check) <- c('user_id','compliance_check_1','timestamp_1')




mean(First_Check$compliance_check_1,na.rm=T)


#Only use compliance checks during the period in which the second wave survey was out
Second_Check <- Compliance_Check %>% filter(timestamp > 1592500000000)
#Use the last compliance check for each respondent in this time frame:
Second_Check <- Second_Check %>% group_by(user_id) %>% top_n(1, timestamp)
#Set column names:
colnames(Second_Check) <- c('user_id','compliance_check_2','timestamp_2')

#Merge first check with the existing data-frame
df_1 <- merge(Attrition_Data,First_Check,by.x='visa1',by.y='user_id',all.x=T)
df_new <- df_1 %>% select(visa1,Treated,compliance_check_1,timestamp_1,Both_Waves)
#Merge the second check with the existing data-frame
df_new_1 <- merge(df_new,Second_Check,by.x='visa1',by.y='user_id',all.x=T)


df_new_1$Complied <- ifelse(df_new_1$compliance_check_1 == 1 & df_new_1$compliance_check_1 == 1,1,0)



Attrit_Data <- df_new_1 %>% filter(Both_Waves == 0)
Stay_Data <- df_new_1 %>% filter(Both_Waves == 1)


mean(Attrit_Data$compliance_check_1,na.rm=T)
mean(Stay_Data$compliance_check_1,na.rm=T)

















Attrition_Group <- Attrition_Data_2 %>% filter(Both_Waves == 0)

Stayed_Group <- Attrition_Data_2 %>% filter(Both_Waves == 1)

mean(Attrition_Group$compliance_check_1,na.rm=T)

mean(Stayed_Group$compliance_check_1,na.rm=T)



data_groups <- Attrition_Data %>% group_by(Groups) %>% mutate(Mean_Age = mean(Age,na.rm=T))
data_groups <- data_groups %>% group_by(Groups) %>% mutate(Mean_DL = mean(Total_DL,na.rm=T))
data_groups <- data_groups %>% group_by(Groups) %>% mutate(Mean_income = mean(income_score,na.rm=T))
data_groups <- data_groups %>% group_by(Groups) %>% mutate(Prop_Female = mean(gender_dummy_fem,na.rm=T))
data_groups <- data_groups %>% group_by(Groups) %>% mutate(Prop_White = mean(race_white,na.rm=T))
data_groups <- data_groups %>% group_by(Groups) %>% mutate(Mean_educ = mean(educ_score,na.rm=T))
data_groups <- data_groups %>% group_by(Groups) %>% mutate(Mean_ideo = mean(ideo_score,na.rm=T))

mean_data_groups <- data_groups %>% select(Groups,
                                           Mean_Age,
                                           Mean_DL,
                                           Mean_income,
                                           Prop_Female,
                                           Prop_White,
                                           Mean_educ,
                                           Mean_ideo)

count_groups <- mean_data_groups %>% group_by(Groups) %>% count()
mean_data_groups <- unique(mean_data_groups)

mean_data_groups <- merge(count_groups,mean_data_groups,by='Groups') 



#Create Xtable Object:
xt <- xtable(mean_data_groups,
             digits=2,
             align=c(
               "p{1cm}|","|p{4cm}|",
               "p{1cm}|","p{1cm}|",
               "p{1.5cm}|","p{1cm}|",
               "p{1.5cm}|","p{1.5cm}|",
               "p{1.5cm}|","p{1.5cm}|"))

#Name Columns:
names(xt) <- c('Group','Observ.','Age','Dig. Lit.','Income','Gender (Prop. Female)','Race (Prop. White)','Education','Ideology' )

#Write Table:
write(print(xt,include.rownames=FALSE,
            sanitize.colnames.function = identity),file='./Tables/Table_1.txt')















########################################################################################################################################################
### Title: News Credibility Labels Improve News Diets, Reduce Misperceptions, and Increase Media Trust
### Authors: Kevin Aslett, Andrew Guess, Jonathan Nagler, Richard Bonneaua, and Joshua A. Tucker
### Purpose of code: Produce figures and tables of analyses that are displayed in the main test of the paper

##### Data In:
# (1) ./Data/Clean_NewsGuard_Digital_Trace_Data.csv
# (2) ./Data/Clean_NewsGuard_Survey_Study.csv

##### Data Out: NONE

########################################################################################################################################################

#Load Libraries:
library(tidyverse)
library(dplyr)
library(AER)
library(glmnet)
library(estimatr)
library(huxtable)
library(magrittr)
library(texreg)
library(ivpack)

#Read in survey data without digital trace data:

data_frame_1 <- read_csv('./Data/Clean_NewsGuard_Survey_Study.csv',
                         col_types = cols(
                           .default= col_character(),
                           Treated = col_double(),
                           SMP4310=col_double(),
                           SMP4310_w2=col_double(),
                           SMP4326=col_double(),
                           SMP4326_w2=col_double(),
                           Trust_inst_w2=col_double(),
                           Trust_inst_w1=col_double(),
                           BLM_Misinfo_Index_w2=col_double(),
                           Covid_Misinfo_Index_w2=col_double(),
                           BLM_info_Index_w2=col_double(),
                           Covid_info_Index_w2=col_double(),
                           Pol_cyn_2=col_double(),
                           Pol_cyn_1=col_double(),
                           Complied=col_double(),
                           compliance_check_1=col_double(),
                           Fox_Trust_2=col_double(),
                           Fox_Trust_1=col_double(),
                           CNN_Trust_2=col_double(),
                           CNN_Trust_1=col_double(),
                           ABC_Trust_2=col_double(),
                           ABC_Trust_1=col_double(),
                           NBC_Trust_2=col_double(),
                           NBC_Trust_1=col_double(),
                           CBS_Trust_2=col_double(),
                           CBS_Trust_1=col_double(),
                           aff_pol_w2=col_double(),
                           aff_pol_w1=col_double(),
                           Trust_Media_w2=col_double(),
                           Treated=col_double(),
                           Trust_Media_w1=col_double(),
                           gender_dummy_fem=col_double(),
                           educ_score=col_double(),
                           Age=col_double(),
                           Age_Sq=col_double(),
                           party_score=col_double(),
                           race_white=col_double(),
                           ideo_score=col_double(),
                           Trust_Media_w1=col_double(),
                           trust_news=col_double(),
                           trust_news_sm=col_double(),
                           cons_news_n=col_double(),
                           cons_cable=col_double(),
                           cons_print=col_double(),
                           cons_public=col_double(), 
                           cons_talk=col_double(),
                           cons_desk=col_double(),
                           cons_mobile=col_double(),
                           Safari_dummy=col_double()
                         ))

          
          
data_frame_1$NG_feeling <- factor(data_frame_1$SMP3005_w2, levels = c('I liked it a lot',
                                                                      'I liked it a little',
                                                                      'I neither liked it nor disliked it',
                                                                      'I disliked it a little',
                                                                      'I disliked it a lot'))

data_frame_1$NG_feeling <- as.numeric(data_frame_1$NG_feeling)
Compl_Data <- data_frame_1 %>% filter(compliance_check_1 == 1)


  
table(Compl_Data$NG_feeling)
